# PostgreSQL. Versions 9.3 and up are supported.
#   gem install pg
#
#   Ensure the pg gem is defined in your Gemfile
#   gem "pg"
#
default: &default
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: <%= ENV.fetch("DATABASE_NAME") { "feed_generator_development" } %>
  username: <%= ENV.fetch("DATABASE_USERNAME") { "postgres" } %>
  password: <%= ENV.fetch("DATABASE_PASSWORD") { "" } %>
  host: <%= ENV.fetch("DATABASE_HOST") { "localhost" } %>

test:
  <<: *default
  database: <%= ENV.fetch("DATABASE_NAME") { "feed_generator_test" } %>
  username: <%= ENV.fetch("DATABASE_USERNAME") { "postgres" } %>
  password: <%= ENV.fetch("DATABASE_PASSWORD") { "" } %>
  host: <%= ENV.fetch("DATABASE_HOST") { "localhost" } %>

production:
  primary:
    <<: *default
    database: <%= ENV.fetch("DATABASE_NAME") { "feed_generator_production" } %>
    username: <%= ENV.fetch("DATABASE_USERNAME") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD") %>
    host: <%= ENV.fetch("DATABASE_HOST") %>
  cache:
    <<: *default
    database: <%= ENV.fetch("CACHE_DATABASE_NAME") { "feed_generator_cache_production" } %>
    username: <%= ENV.fetch("DATABASE_USERNAME") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD") %>
    host: <%= ENV.fetch("DATABASE_HOST") %>
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    database: <%= ENV.fetch("QUEUE_DATABASE_NAME") { "feed_generator_queue_production" } %>
    username: <%= ENV.fetch("DATABASE_USERNAME") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD") %>
    host: <%= ENV.fetch("DATABASE_HOST") %>
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    database: <%= ENV.fetch("CABLE_DATABASE_NAME") { "feed_generator_cable_production" } %>
    username: <%= ENV.fetch("DATABASE_USERNAME") %>
    password: <%= ENV.fetch("DATABASE_PASSWORD") %>
    host: <%= ENV.fetch("DATABASE_HOST") %>
    migrations_paths: db/cable_migrate
